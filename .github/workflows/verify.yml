# This workflow ...
name: Verify New Associations
on: pull_request

jobs:
  verify_collection:
    permissions:
      checks: write
      # only needed unless run with comment_mode: off
      pull-requests: write
      # only needed for private repository
      contents: read
      # only needed for private repository
      issues: read
    if: |
        ${{ startsWith(github.head_ref, 'diff/uat') }}      ||
        ${{ startsWith(github.head_ref, 'diff/ops') }}
    name: Verify ${{ github.event.pull_request.title }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.5.1
      - name: Get env and concept id
        id: get-env-ccid
        run: |
          echo "test_env=$(python -c "print('${{ github.head_ref }}'.split('/')[1])")" >> $GITHUB_OUTPUT
          echo "concept_id=$(python -c "print('${{ github.head_ref }}'.split('/')[2])")" >> $GITHUB_OUTPUT
      - name: Execute tests
        id: run-tests
        env:
          TEST_ENV: ${{ steps.get-env-ccid.outputs.test_env }}
          CONCEPT_ID: ${{ steps.get-env-ccid.outputs.concept_id }}
          CMR_USER: ${{ secrets.CMR_USER }}
          CMR_PASS: ${{ secrets.CMR_PASS }}

        run: |
          poetry install
          poetry run pytest tests/verify_collection.py --concept_id $CONCEPT_ID --env $TEST_ENV --junitxml=$GITHUB_WORKSPACE/test-results/${CONCEPT_ID}_report.xml --html=$GITHUB_WORKSPACE/test-results/${CONCEPT_ID}_report.html
          echo "xml_report=test-results/${CONCEPT_ID}_report.xml" >> $GITHUB_OUTPUT
          echo "html_report=test-results/${CONCEPT_ID}_report.html" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: test-results
          path: ${{ steps.run-tests.outputs.html_report }}
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          report_suite_logs: info
          check_name: Test Results for ${{ steps.get-env-ccid.outputs.concept_id }}
          files: ${{ steps.run-tests.outputs.xml_report }}
